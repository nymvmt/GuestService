### Guest Service API Tests
### Base URL
@baseUrl = https://kt-pj2-guest-app-d7d0e6gagqgggza7.koreacentral-01.azurewebsites.net
#@baseUrl = http://localhost:8083

@appointmentId = appo005
@guestId = guest1757564999875
@userId = id@kt.com
@hostId = testuser001@kt.com

### ===========================================
### 1. Appointment 관련 API
### ===========================================

### 1-1. 전체 Appointment 목록 조회
GET {{baseUrl}}/appointments
Content-Type: application/json

### 1-2. 특정 Appointment 상세 조회
GET {{baseUrl}}/appointments/{{appointmentId}}
Content-Type: application/json

### ===========================================
### 2. Guest 등록 및 조회 API
### ===========================================

### 2-1. Guest 등록 (Appointment에 참여)
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "{{userId}}",
  "guest_status": "coming"
}

### 2-2. 특정 Appointment의 Guest 목록 조회
GET {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

### 2-3. 특정 Guest 상태 조회 (상태 정보만 반환)
GET {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json

### 2-4. 특정 Guest 전체 정보 조회 (상태 외 다른 정보도 포함)
GET {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}
Content-Type: application/json

### ===========================================
### 3. Guest 상태 변경 API (호스트 권한 필요)
### ===========================================

### 3-1. Guest 상태를 "came"로 변경
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json
X-User-ID: {{hostId}}

{
  "guest_status": "came"
}

### 3-2. Guest 상태를 "confirmed"로 변경
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json
X-User-ID: {{hostId}}

{
  "guest_status": "confirmed"
}

### 3-3. Guest 상태를 "declined"로 변경
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json
X-User-ID: {{hostId}}

{
  "guest_status": "declined"
}

### 3-4. Guest 상태를 "pending"으로 변경
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json
X-User-ID: {{hostId}}

{
  "guest_status": "pending"
}

### ===========================================
### 4. 권한 오류 테스트 (호스트가 아닌 사용자)
### ===========================================

### 4-1. 권한 없는 사용자로 상태 변경 시도 (403 오류 예상)
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json
X-User-ID: {{userId}}

{
  "guest_status": "came"
}

### 4-2. 헤더 없이 상태 변경 시도
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}/guest_status
Content-Type: application/json

{
  "guest_status": "came"
}

### ===========================================
### 5. Guest 삭제 API
### ===========================================

### 5-1. Guest 참가 취소 (삭제)
DELETE {{baseUrl}}/appointments/{{appointmentId}}/guests/{{guestId}}
Content-Type: application/json

### ===========================================
### 6. 에러 케이스 테스트
### ===========================================

### 6-1. 존재하지 않는 Appointment 조회 (404 오류 예상)
GET {{baseUrl}}/appointments/nonexistent-appointment
Content-Type: application/json

### 6-2. 존재하지 않는 Guest 상태 조회 (404 오류 예상)
GET {{baseUrl}}/appointments/{{appointmentId}}/guests/nonexistent-guest/guest_status
Content-Type: application/json

### 6-3. 잘못된 사용자 ID로 Guest 등록 시도
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "nonexistent-user",
  "guest_status": "coming"
}

### ===========================================
### 7. 전체 시나리오 테스트 (순서대로 실행)
### ===========================================

### 7-1. Step 1: Appointment 목록 확인
GET {{baseUrl}}/appointments
Content-Type: application/json

### 7-2. Step 2: 새로운 Guest 등록
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "newuser@kt.com",
  "guest_status": "coming"
}

### 7-3. Step 3: 등록된 Guest 목록 확인
GET {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

### 7-4. Step 4: Guest 상태 변경 (새로 생성된 guest_id 사용)
# 위 Step 2에서 받은 guest_id를 여기에 입력
PATCH {{baseUrl}}/appointments/{{appointmentId}}/guests/NEW_GUEST_ID_HERE/guest_status
Content-Type: application/json
X-User-ID: {{hostId}}

{
  "guest_status": "confirmed"
}

### 7-5. Step 5: 변경된 상태 확인
GET {{baseUrl}}/appointments/{{appointmentId}}/guests/NEW_GUEST_ID_HERE/guest_status
Content-Type: application/json

### ===========================================
### 8. 개발/디버깅용 추가 테스트
### ===========================================

### 8-1. 중복 Guest 등록 시도 (이미 참여한 사용자)
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "{{userId}}",
  "guest_status": "coming"
}

### 8-2. 다양한 상태값으로 Guest 등록
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "testuser003@kt.com",
  "guest_status": "pending"
}

### 8-3. 상태값 없이 Guest 등록 (기본값 "coming" 적용 확인)
POST {{baseUrl}}/appointments/{{appointmentId}}/guests
Content-Type: application/json

{
  "user_id": "testuser004@kt.com"
}
